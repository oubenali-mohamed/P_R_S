{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/components/Trends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isEmpty } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trends = () => {\n  _s();\n  const posts = useSelector(state => state.allPostsReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isEmpty(posts)) {\n      const arrTrier = Object.keys(posts).map(i => posts[i]);\n      let sorteArr = arrTrier.sort((a, b) => {\n        return b.likers.length - a.likers.length;\n      });\n    }\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"trends\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(Trends, \"nKHMErMJx3FtVmMxsu6gIp41yrw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Trends;\nexport default Trends;\nvar _c;\n$RefreshReg$(_c, \"Trends\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","isEmpty","jsxDEV","_jsxDEV","Trends","_s","posts","state","allPostsReducer","usersData","usersReducer","dispatch","arrTrier","Object","keys","map","i","sorteArr","sort","a","b","likers","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/components/Trends.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { isEmpty } from './utils'\n\n\nconst Trends = () => {\n  const posts = useSelector((state) => state.allPostsReducer)\n  const usersData = useSelector((state) => state.usersReducer)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(!isEmpty(posts)) {\n        const arrTrier = Object.keys(posts).map((i) => posts[i])\n     let sorteArr = arrTrier.sort((a,b) => {\n        return b.likers.length - a.likers.length\n     })\n    \n    }\n\n  }, [posts])\n\n  return <div>trends</div>\n}\n\nexport default Trends\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC;EAC3D,MAAMC,SAAS,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACG,YAAY,CAAC;EAC5D,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAG,CAACG,OAAO,CAACK,KAAK,CAAC,EAAE;MAChB,MAAMM,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACS,GAAG,CAAEC,CAAC,IAAKV,KAAK,CAACU,CAAC,CAAC,CAAC;MAC3D,IAAIC,QAAQ,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACnC,OAAOA,CAAC,CAACC,MAAM,CAACC,MAAM,GAAGH,CAAC,CAACE,MAAM,CAACC,MAAM;MAC3C,CAAC,CAAC;IAEH;EAEF,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,oBAAOH,OAAA;IAAAoB,QAAA,EAAK;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC1B,CAAC;AAAAtB,EAAA,CAjBKD,MAAM;EAAA,QACIJ,WAAW,EACPA,WAAW,EACZD,WAAW;AAAA;AAAA6B,EAAA,GAHxBxB,MAAM;AAmBZ,eAAeA,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}