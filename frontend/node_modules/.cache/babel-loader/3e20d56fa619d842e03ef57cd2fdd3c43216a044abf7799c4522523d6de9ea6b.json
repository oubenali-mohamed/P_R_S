{"ast":null,"code":"import axios from 'axios';\nexport const GET_USER = 'GET_USER';\nexport const UPLOAD_PICTURE = 'UPLOAD_PICTURE';\nexport const getUser = uid => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}api/user/${uid}`);\n      dispatch({\n        type: GET_USER,\n        payload: res.data\n      });\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n};\nexport const uploadPicture = (data, id) => {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/user/upload`, data).then(res => {\n      if (res.data.errors) {\n        dispatch({\n          type: GET_USER_ERRORS,\n          payload: res.data.errors\n        });\n      } else {\n        dispatch({\n          type: GET_USER_ERRORS,\n          payload: \"\"\n        });\n        return axios.get(`${process.env.REACT_APP_API_URL}api/user/${id}`).then(res => {\n          dispatch({\n            type: UPLOAD_PICTURE,\n            payload: res.data.picture\n          });\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"names":["axios","GET_USER","UPLOAD_PICTURE","getUser","uid","dispatch","res","get","process","env","REACT_APP_API_URL","type","payload","data","err","console","log","uploadPicture","id","post","then","errors","GET_USER_ERRORS","picture","catch"],"sources":["/Users/mohamedoubenali/Desktop/PROJET_MERN-front/client/src/actions/user.actions.js"],"sourcesContent":["import axios from 'axios'\n\nexport const GET_USER = 'GET_USER'\nexport const UPLOAD_PICTURE = 'UPLOAD_PICTURE'\n\nexport const getUser = (uid) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}api/user/${uid}`\n      )\n      dispatch({ type: GET_USER, payload: res.data })\n    } catch (err) {\n      return console.log(err)\n    }\n  }\n}\n\nexport const uploadPicture = (data, id) => {\n    return (dispatch) => {\n      return axios\n        .post(`${process.env.REACT_APP_API_URL}api/user/upload`, data)\n        .then((res) => {\n          if (res.data.errors) {\n            dispatch({ type: GET_USER_ERRORS, payload: res.data.errors });\n          } else {\n            dispatch({ type: GET_USER_ERRORS, payload: \"\" });\n            return axios\n              .get(`${process.env.REACT_APP_API_URL}api/user/${id}`)\n              .then((res) => {\n                dispatch({ type: UPLOAD_PICTURE, payload: res.data.picture });\n              });\n          }\n        })\n        .catch((err) => console.log(err));\n    };\n  };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAE9C,OAAO,MAAMC,OAAO,GAAIC,GAAG,IAAK;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CACxB,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,YAAWN,GAAI,EAClD,CAAC;MACDC,QAAQ,CAAC;QAAEM,IAAI,EAAEV,QAAQ;QAAEW,OAAO,EAAEN,GAAG,CAACO;MAAK,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAOC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACzB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGA,CAACJ,IAAI,EAAEK,EAAE,KAAK;EACvC,OAAQb,QAAQ,IAAK;IACnB,OAAOL,KAAK,CACTmB,IAAI,CAAE,GAAEX,OAAO,CAACC,GAAG,CAACC,iBAAkB,iBAAgB,EAAEG,IAAI,CAAC,CAC7DO,IAAI,CAAEd,GAAG,IAAK;MACb,IAAIA,GAAG,CAACO,IAAI,CAACQ,MAAM,EAAE;QACnBhB,QAAQ,CAAC;UAAEM,IAAI,EAAEW,eAAe;UAAEV,OAAO,EAAEN,GAAG,CAACO,IAAI,CAACQ;QAAO,CAAC,CAAC;MAC/D,CAAC,MAAM;QACLhB,QAAQ,CAAC;UAAEM,IAAI,EAAEW,eAAe;UAAEV,OAAO,EAAE;QAAG,CAAC,CAAC;QAChD,OAAOZ,KAAK,CACTO,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,YAAWQ,EAAG,EAAC,CAAC,CACrDE,IAAI,CAAEd,GAAG,IAAK;UACbD,QAAQ,CAAC;YAAEM,IAAI,EAAET,cAAc;YAAEU,OAAO,EAAEN,GAAG,CAACO,IAAI,CAACU;UAAQ,CAAC,CAAC;QAC/D,CAAC,CAAC;MACN;IACF,CAAC,CAAC,CACDC,KAAK,CAAEV,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}