{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/components/Post/CardComments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment, getPosts } from '../../actions/post.actions';\nimport FollowHandler from '../Profil/FollowHandler';\nimport { isEmpty, timestampParser } from '../utils';\n// import EditDeleteComment from \"./EditDeleteComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardComments = ({\n  post\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const handleComment = e => {\n    e.preventDefault();\n    console.log(user);\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo)).then(() => dispatch(getPosts())).then(() => setText(''));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [post.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: comment.commenterId === userData._id ? 'comment-container client' : 'comment-container',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-part\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: !isEmpty(usersData[0]) && usersData.map(user => {\n              if (user._id === comment.commenterId) return user.picture;else {\n                return null;\n              }\n            }).join(''),\n            alt: \"commenter pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-part\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pseudo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: comment.commenterPseudo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), comment.commenterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n                idToFollow: comment.commenterId,\n                type: 'card'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: timestampParser(comment.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }), userData._id && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        onChange: e => setText(e.target.value),\n        value: text,\n        placeholder: \"Laisser un commentaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CardComments, \"NOaLkfjDBUps5yHegM7xl9yBrak=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = CardComments;\nexport default CardComments;\nvar _c;\n$RefreshReg$(_c, \"CardComments\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addComment","getPosts","FollowHandler","isEmpty","timestampParser","jsxDEV","_jsxDEV","CardComments","post","_s","text","setText","usersData","state","usersReducer","userData","userReducer","dispatch","handleComment","e","preventDefault","console","log","user","_id","pseudo","then","className","children","comments","map","comment","commenterId","src","picture","join","alt","fileName","_jsxFileName","lineNumber","columnNumber","commenterPseudo","idToFollow","type","timestamp","action","onSubmit","name","onChange","target","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/components/Post/CardComments.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addComment, getPosts } from '../../actions/post.actions'\nimport FollowHandler from '../Profil/FollowHandler'\nimport { isEmpty, timestampParser } from '../utils'\n// import EditDeleteComment from \"./EditDeleteComment\";\n\nconst CardComments = ({ post }) => {\n  const [text, setText] = useState('')\n  const usersData = useSelector((state) => state.usersReducer)\n  const userData = useSelector((state) => state.userReducer)\n  const dispatch = useDispatch()\n\n  const handleComment = (e) => {\n    e.preventDefault()\nconsole.log(user)\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo))\n        .then(() => dispatch(getPosts()))\n        .then(() => setText(''))\n    }\n  }\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment) => {\n        return (\n          <div\n            className={\n              comment.commenterId === userData._id\n                ? 'comment-container client'\n                : 'comment-container'\n            }\n            key={comment._id}\n          >\n            <div className=\"left-part\">\n              <img\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((user) => {\n                      if (user._id === comment.commenterId) return user.picture\n                      else {\n                        return null\n                      }\n                    })\n                    .join('')\n                }\n                alt=\"commenter pic\"\n              />\n            </div>\n            <div className=\"right-part\">\n              <div className=\"comment-header\">\n                <div className=\"pseudo\">\n                  <h3>{comment.commenterPseudo}</h3>\n                  {comment.commenterId !== userData._id && (\n                    <FollowHandler\n                      idToFollow={comment.commenterId}\n                      type={'card'}\n                    />\n                  )}\n                </div>\n                <span>{timestampParser(comment.timestamp)}</span>\n              </div>\n              <p>{comment.text}</p>\n              {/* <EditDeleteComment comment={comment} postId={post._id} /> */}\n            </div>\n          </div>\n        )\n      })}\n      {userData._id && (\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n            placeholder=\"Laisser un commentaire\"\n          />\n          <br />\n          <input type=\"submit\" value=\"Envoyer\" />\n        </form>\n      )}\n    </div>\n  )\n}\n\nexport default CardComments\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,4BAA4B;AACjE,OAAOC,aAAa,MAAM,yBAAyB;AACnD,SAASC,OAAO,EAAEC,eAAe,QAAQ,UAAU;AACnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMe,SAAS,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EAC5D,MAAMC,QAAQ,GAAGhB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACG,WAAW,CAAC;EAC1D,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAMoB,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACb,IAAIb,IAAI,EAAE;MACRO,QAAQ,CAACjB,UAAU,CAACQ,IAAI,CAACgB,GAAG,EAAET,QAAQ,CAACS,GAAG,EAAEd,IAAI,EAAEK,QAAQ,CAACU,MAAM,CAAC,CAAC,CAChEC,IAAI,CAAC,MAAMT,QAAQ,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChCyB,IAAI,CAAC,MAAMf,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,oBACEL,OAAA;IAAKqB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChCpB,IAAI,CAACqB,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;MAC9B,oBACEzB,OAAA;QACEqB,SAAS,EACPI,OAAO,CAACC,WAAW,KAAKjB,QAAQ,CAACS,GAAG,GAChC,0BAA0B,GAC1B,mBACL;QAAAI,QAAA,gBAGDtB,OAAA;UAAKqB,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBtB,OAAA;YACE2B,GAAG,EACD,CAAC9B,OAAO,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,IACtBA,SAAS,CACNkB,GAAG,CAAEP,IAAI,IAAK;cACb,IAAIA,IAAI,CAACC,GAAG,KAAKO,OAAO,CAACC,WAAW,EAAE,OAAOT,IAAI,CAACW,OAAO,MACpD;gBACH,OAAO,IAAI;cACb;YACF,CAAC,CAAC,CACDC,IAAI,CAAC,EAAE,CACX;YACDC,GAAG,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlC,OAAA;UAAKqB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBtB,OAAA;YAAKqB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BtB,OAAA;cAAKqB,SAAS,EAAC,QAAQ;cAAAC,QAAA,gBACrBtB,OAAA;gBAAAsB,QAAA,EAAKG,OAAO,CAACU;cAAe;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACjCT,OAAO,CAACC,WAAW,KAAKjB,QAAQ,CAACS,GAAG,iBACnClB,OAAA,CAACJ,aAAa;gBACZwC,UAAU,EAAEX,OAAO,CAACC,WAAY;gBAChCW,IAAI,EAAE;cAAO;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CACF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNlC,OAAA;cAAAsB,QAAA,EAAOxB,eAAe,CAAC2B,OAAO,CAACa,SAAS;YAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACNlC,OAAA;YAAAsB,QAAA,EAAIG,OAAO,CAACrB;UAAI;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CAAC;MAAA,GAjCDT,OAAO,CAACP,GAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkCb,CAAC;IAEV,CAAC,CAAC,EACDzB,QAAQ,CAACS,GAAG,iBACXlB,OAAA;MAAMuC,MAAM,EAAC,EAAE;MAACC,QAAQ,EAAE5B,aAAc;MAACS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC/DtB,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXI,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAG7B,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAAC8B,MAAM,CAACC,KAAK,CAAE;QACzCA,KAAK,EAAExC,IAAK;QACZyC,WAAW,EAAC;MAAwB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QAAOqC,IAAI,EAAC,QAAQ;QAACO,KAAK,EAAC;MAAS;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA/B,EAAA,CA9EKF,YAAY;EAAA,QAEER,WAAW,EACZA,WAAW,EACXD,WAAW;AAAA;AAAAsD,EAAA,GAJxB7C,YAAY;AAgFlB,eAAeA,YAAY;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}