{"ast":null,"code":"import axios from 'axios';\nimport { GET_POSTS, LIKE_POST, UNLIKE_POST } from '../actions/post.actions';\nconst initialState = {};\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return action.payload;\n    case LIKE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: [action.payload.userId, ...post.likers]\n          };\n        }\n        return post;\n      });\n    case UNLIKE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: post.likers.filter(id => id !== action.payload.userId)\n          };\n        }\n        return post;\n      });\n    case UNLIKE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...state,\n            message: action.payload.message\n          };\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["axios","GET_POSTS","LIKE_POST","UNLIKE_POST","initialState","postReducer","state","action","type","payload","map","post","_id","postId","likers","userId","filter","id","message"],"sources":["/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/reducers/post.reducer.js"],"sourcesContent":["import axios from 'axios'\nimport { GET_POSTS, LIKE_POST, UNLIKE_POST } from '../actions/post.actions'\n\nconst initialState = {}\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return action.payload\n    case LIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: [action.payload.userId, ...post.likers],\n          }\n        }\n        return post\n      })\n    case UNLIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: post.likers.filter((id) => id !== action.payload.userId),\n          }\n        }\n        return post\n      })\n      case UNLIKE_POST:\n        return state.map((post)=>{\n          if(post._id === action.payload.postId) {\n            return {\n              ...state,\n              message: action.payload.message,\n            }\n          }\n        })\n\n    default:\n      return state\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAE3E,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,SAAS;MACZ,OAAOM,MAAM,CAACE,OAAO;IACvB,KAAKP,SAAS;MACZ,OAAOI,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPG,MAAM,EAAE,CAACP,MAAM,CAACE,OAAO,CAACM,MAAM,EAAE,GAAGJ,IAAI,CAACG,MAAM;UAChD,CAAC;QACH;QACA,OAAOH,IAAI;MACb,CAAC,CAAC;IACJ,KAAKR,WAAW;MACd,OAAOG,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPG,MAAM,EAAEH,IAAI,CAACG,MAAM,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKV,MAAM,CAACE,OAAO,CAACM,MAAM;UACjE,CAAC;QACH;QACA,OAAOJ,IAAI;MACb,CAAC,CAAC;IACF,KAAKR,WAAW;MACd,OAAOG,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAG;QACvB,IAAGA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACrC,OAAO;YACL,GAAGP,KAAK;YACRY,OAAO,EAAEX,MAAM,CAACE,OAAO,CAACS;UAC1B,CAAC;QACH;MACF,CAAC,CAAC;IAEN;MACE,OAAOZ,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}