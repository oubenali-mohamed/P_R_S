{"ast":null,"code":"import axios from 'axios';\n\n// postse\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const LIKE_POST = 'LIKE_POST';\nexport const UNLIKE_POST = 'UNLIKE_POST';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\n\n//comment\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const getPosts = num => {\n  return dispatch => {\n    return axios.get(`${process.env.REACT_APP_API_URL}api/post`).then(res => {\n      const array = res.data.slice(0, num);\n      dispatch({\n        type: GET_POSTS,\n        payload: array\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPost = data => {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/post`, data).then(res => {});\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const unlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: 'put',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: {\n        message\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_POST,\n        payload: {\n          message,\n          postId\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    return axios({\n      method: 'delete',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_POST,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: {\n        commenterId,\n        text,\n        commenterPseudo\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_COMMENT,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editComment = (postId, commentId, text) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: {\n        commentId,\n        text\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_COMMENT,\n        payload: {\n          postId,\n          commentId,\n          text\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteComment = (postId, commentId) => {\n  return dispatch => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: {\n        commentId\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_COMMENT,\n        payload: {\n          postId,\n          commentId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"names":["axios","GET_POSTS","ADD_POST","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","getPosts","num","dispatch","get","process","env","REACT_APP_API_URL","then","res","array","data","slice","type","payload","catch","err","console","log","addPost","post","likePost","postId","userId","method","url","id","unlikePost","updatePost","message","deletePost","addComment","commenterId","text","commenterPseudo","editComment","commentId","deleteComment"],"sources":["/Users/mohamedoubenali/Desktop/Projet_Reseau_Social_MERN/frontend/src/actions/post.actions.js"],"sourcesContent":["import axios from 'axios'\n\n// postse\nexport const GET_POSTS = 'GET_POSTS'\nexport const ADD_POST = 'ADD_POST'\nexport const LIKE_POST = 'LIKE_POST'\nexport const UNLIKE_POST = 'UNLIKE_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\nexport const DELETE_POST = 'DELETE_POST'\n\n//comment\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const EDIT_COMMENT = 'EDIT_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\n\nexport const getPosts = (num) => {\n  return (dispatch) => {\n    return axios\n      .get(`${process.env.REACT_APP_API_URL}api/post`)\n      .then((res) => {\n        const array = res.data.slice(0, num)\n        dispatch({\n          type: GET_POSTS,\n          payload: array,\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const addPost = (data) => {\n  return (dispatch) => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/post`, data)\n    .then((res) => {\n      \n    })\n  }\n}\n\nexport const likePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: LIKE_POST, payload: { postId, userId } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const unlikePost = (postId, userId) => {\n  return (dispatch) => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: { id: userId },\n    })\n      .then((res) => {\n        dispatch({ type: UNLIKE_POST, payload: { postId, userId } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const updatePost = (postId, message) => {\n  return (dispatch) => {\n    return axios({\n      method: 'put',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: { message },\n    })\n      .then((res) => {\n        dispatch({ type: UPDATE_POST, payload: { message, postId } })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n}\nexport const deletePost = (postId) => {\n  return (dispatch) => {\n    return axios({\n      method: 'delete',\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n    })\n      .then((res) => {\n        dispatch({ type: DELETE_POST, payload: { postId } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return (dispatch) => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: { commenterId, text, commenterPseudo },\n    })\n      .then((res) => {\n        dispatch({ type: ADD_COMMENT, payload: { postId } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\nexport const editComment = (postId, commentId, text) => {\n  return (dispatch) => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: { commentId, text },\n    })\n      .then((res) => {\n        dispatch({ type: EDIT_COMMENT, payload: { postId, commentId, text } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n\nexport const deleteComment = (postId, commentId) => {\n  return (dispatch) => {\n    return axios({\n      method: 'patch',\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: { commentId },\n    })\n      .then((res) => {\n        dispatch({ type: DELETE_COMMENT, payload: { postId, commentId } })\n      })\n      .catch((err) => console.log(err))\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}